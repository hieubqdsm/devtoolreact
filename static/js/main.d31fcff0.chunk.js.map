{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","utils/editText.js","components/DownloadFile.js","components/DownloadMultiFile.js","index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","RefineText","React","Component","raw_text","remove_space","text_format","refined_text","trim","TitleCase","CamelCase","replace","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","returnImageName","event","target","files","name","getFileExtension","fileName","arr_name","DownloadMultiFile","useState","logo","imgURL","setImage","getFileName","fileExtension","debugFileExtension","keywordList","setKeywordList","className","style","width","height","onChange","value","onHandleTextInput","type","URL","createObjectURL","returnImage","onClick","link","keywordArray","console","log","fetch","response","blob","url","window","a","document","createElement","newFileName","href","download","click","downloadAllImage","src","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d31fcff0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React, {useState} from \"react\";\n\nfunction returnImage(event) {\n    return URL.createObjectURL(event.target.files[0]);\n}\n\nfunction returnImageName(event) {\n    return event.target.files[0].name;\n}\n\nfunction App() {\n    const [imgURL, setImage] = useState(logo);\n    const [fileName, getFileName] = useState('default');\n    console.log(imgURL);\n    return (\n        <div className=\"App\">\n            <input type=\"file\" onChange={(event) => {\n                setImage(returnImage(event));\n                getFileName(returnImageName(event))\n            }}/><br/>\n            <img src={imgURL} width={500}/>\n\n            <h6>{imgURL}</h6>\n            <h6>{fileName}</h6>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const RefineText = (raw_text, remove_space, text_format) => {\n    let refined_text = \"\";\n    raw_text = raw_text.trim();\n    switch (text_format) {\n        case \"Caption\":\n            refined_text = TitleCase(raw_text);\n            break;\n        case \"Camel\":\n            refined_text = CamelCase(raw_text);\n            break;\n        default:\n        case \"Origin\":\n            refined_text = raw_text;\n            break;\n    }\n    switch (remove_space) {\n        case \"setunderline\":\n            refined_text = refined_text.replace(/ /g, \"_\");\n            break;\n        case \"setminus\":\n            refined_text = refined_text.replace(/ /g, \"-\");\n            break;\n        default:\n        case \"removespace\":\n            refined_text = refined_text.replace(/ /g, \"\");\n            break;\n    }\n    return refined_text;\n}\n\nconst  TitleCase = (str) => {\n    let splitStr = str.toLowerCase().split(' ');\n    for (let i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    return splitStr.join(' ');\n}\n\nconst CamelCase = (str) => {\n    let splitStr = str.toLowerCase().split(' ');\n    for (let i = 0; i < splitStr.length; i++) {\n        if (i > 0) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n    }\n    return splitStr.join(' ');\n}\n\nconst TextToArray = (str) => {\n    return str.split(\",\");\n}\n\nexport {RefineText, TitleCase , CamelCase, TextToArray};","import React from 'react';\nclass DownloadFile extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    downloadEmployeeData = () => {\n        fetch(\"https://scontent.fsgn5-4.fna.fbcdn.net/v/t1.0-9/153531338_4129721350373278_1704693346196518273_o.jpg?_nc_cat=104&ccb=3&_nc_sid=730e14&_nc_ohc=G5xqKYX_ZSUAX-QxWQg&_nc_oc=AQnWL8JLvHpovZRWoAsE9B33Shhy8udRqsGu9a5OB09jSfXYxXhsX4DnYaMqHv67QeA&_nc_ht=scontent.fsgn5-4.fna&oh=e2a439d75baf4ddb9a4c05440ab2bbc8&oe=605CBCAF\")\n            .then(response => {\n                response.blob().then(blob => {\n                    let url = window.URL.createObjectURL(blob);\n                    let a = document.createElement('a');\n                    a.href = url;\n                    a.download = 'aaaa.jpg';\n                    a.click();\n                });\n                //window.location.href = response.url;\n            });\n    }\n\n    render() {\n        return (\n            <div id=\"container\">\n                <h1>Download File using React App</h1>\n                <h3>Download Employee Data using Button</h3>\n                <button onClick={this.downloadEmployeeData}>Download</button>\n                <p/>\n                <h3>Download Employee Data using Link</h3>\n                <a href=\"#\" onClick={this.downloadEmployeeData}>Download</a>\n            </div>\n        )\n    }\n\n}\n\nexport default DownloadFile;","import React, {useState} from \"react\";\nimport logo from \"../logo.svg\";\nimport {RefineText, TextToArray} from \"../utils/editText\";\n\nconst returnImage = (event) => {\n    return URL.createObjectURL(event.target.files[0]);\n}\n\nconst onHandleTextInput = (event) => {\n    return event.target.value;\n}\n\nconst returnImageName = (event) => {\n    return event.target.files[0].name;\n}\n\nconst getFileExtension = (fileName) => {\n    const arr_name = fileName.split(\".\");\n    return arr_name[arr_name.length - 1];\n}\n\nconst downloadAllImage = (link, fileName, keywordList) => {\n    const fileExtension = getFileExtension(fileName);\n    const keywordArray = TextToArray(keywordList);\n    console.log(RefineText(fileName, \"setminus\", \"origin\"));\n    console.log(keywordArray);\n    fetch(link)\n        .then(response => {\n            response.blob().then(blob => {\n                for (let i = 0; i < keywordArray.length; i++) {\n                    const keyword = keywordArray[i].trim();\n                    if (keyword.length <= 0) {\n                        continue;\n                    }\n                    let url = window.URL.createObjectURL(blob);\n                    let a = document.createElement('a');\n                    const newFileName = RefineText(keywordArray[i], \"setminus\", \"origin\")+\".\"+fileExtension;\n                    console.log(newFileName);\n                    a.href = url;\n                    a.download = newFileName;\n                    a.click();\n                }\n            });\n        });\n}\nconst DownloadMultiFile = () => {\n    const [imgURL, setImage] = useState(logo);\n    const [fileName, getFileName] = useState('default');\n    const [fileExtension, debugFileExtension] = useState('None');\n    const [keywordList, setKeywordList] = useState([]);\n    return <div className=\"App\">\n        <h3>1 Hinh tra ve nhieu file</h3>\n        <div>\n            <h6>Keyword list</h6>\n            <textarea name=\"keywordList\" style={{width: \"250px\", height: \"50px\"}}\n                      onChange={(event) => setKeywordList(onHandleTextInput(event))}/>\n        </div>\n        <div>\n            <input type=\"file\" onChange={(event) => {\n                setImage(returnImage(event));\n                getFileName(returnImageName(event));\n                debugFileExtension(getFileExtension(returnImageName(event)));\n            }}/>\n        </div>\n        <div>\n            <button onClick={() => downloadAllImage(imgURL, fileName, keywordList)}>Download All Image</button>\n        </div>\n        <div>\n            <h4>Debug</h4>\n            <img src={imgURL} width={150}/>\n            <h6>{imgURL}</h6>\n            <h6>{fileName}</h6>\n            <h6>{fileExtension}</h6>\n        </div>\n\n\n    </div>\n}\n\nexport default DownloadMultiFile;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DownloadFile from \"./components/DownloadFile\";\nimport DownloadMultiFile from \"./components/DownloadMultiFile\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <DownloadMultiFile/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}