{"version":3,"sources":["logo.svg","utils/editText.js","components/DownloadMultiFile.js","components/ChangeMultiFileName.js","App.js","reportWebVitals.js","components/DownloadFile.js","index.js"],"names":["RefineText","raw_text","remove_space","text_format","refined_text","trim","TitleCase","CamelCase","replace","normalize","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","TextToArray","returnImageName","event","target","files","name","getFileExtension","fileName","arr_name","DownloadMultiFile","useState","logo","imgURL","setImage","getFileName","fileExtension","debugFileExtension","keywordList","setKeywordList","linkKeyword","setLinkKeyword","className","style","display","width","height","onChange","value","onHandleTextInput","text","textArray","textOutput","push","handleUrlExport","type","URL","createObjectURL","returnImage","onClick","link","keywordArray","console","log","fetch","then","response","blob","url","window","a","document","createElement","newFileName","href","download","click","downloadAllImage","src","paddingLeft","map","employee","ChangeMultiFileName","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e95750d3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const RefineText = (raw_text, remove_space, text_format) => {\n    let refined_text = \"\";\n    raw_text = raw_text.trim();\n    switch (text_format) {\n        case \"Caption\":\n            refined_text = TitleCase(raw_text);\n            break;\n        case \"Camel\":\n            refined_text = CamelCase(raw_text);\n            break;\n        default:\n        case \"Origin\":\n            refined_text = raw_text;\n            break;\n    }\n    switch (remove_space) {\n        case \"setunderline\":\n            refined_text = refined_text.replace(/ /g, \"_\");\n            break;\n        case \"setminus\":\n            refined_text = refined_text.replace(/ /g, \"-\");\n            break;\n        case \"removespace\":\n            refined_text = refined_text.replace(/ /g, \"\");\n            break;\n        default:\n            break;\n\n    }\n    return refined_text.normalize('NFD')\n        .replace(/[\\u0300-\\u036f]/g, '')\n        .replace(/đ/g, 'd').replace(/Đ/g, 'D');\n}\n\nconst TitleCase = (str) => {\n    let splitStr = str.toLowerCase().split(' ');\n    for (let i = 0; i < splitStr.length; i++) {\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    return splitStr.join(' ');\n}\n\nconst CamelCase = (str) => {\n    let splitStr = str.toLowerCase().split(' ');\n    for (let i = 0; i < splitStr.length; i++) {\n        if (i > 0) {\n            splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n        }\n    }\n    return splitStr.join(' ');\n}\n\nconst TextToArray = (str) => {\n    const tmp_str = str.replace(/\\n/g, \",\");\n    return tmp_str.split(\",\");\n}\nconst removeAccents = (str) => {\n    const AccentsMap = [\n        \"aàảãáạăằẳẵắặâầẩẫấậ\",\n        \"AÀẢÃÁẠĂẰẲẴẮẶÂẦẨẪẤẬ\",\n        \"dđ\", \"DĐ\",\n        \"eèẻẽéẹêềểễếệ\",\n        \"EÈẺẼÉẸÊỀỂỄẾỆ\",\n        \"iìỉĩíị\",\n        \"IÌỈĨÍỊ\",\n        \"oòỏõóọôồổỗốộơờởỡớợ\",\n        \"OÒỎÕÓỌÔỒỔỖỐỘƠỜỞỠỚỢ\",\n        \"uùủũúụưừửữứự\",\n        \"UÙỦŨÚỤƯỪỬỮỨỰ\",\n        \"yỳỷỹýỵ\",\n        \"YỲỶỸÝỴ\"\n    ];\n    for (let i = 0; i < AccentsMap.length; i++) {\n        const re = new RegExp('[' + AccentsMap[i].substr(1) + ']', 'g');\n        const char = AccentsMap[i][0];\n        str = str.replace(re, char);\n    }\n    return str;\n}\nexport { RefineText, TitleCase, CamelCase, TextToArray, removeAccents };","import React, { useState } from \"react\";\nimport logo from \"../logo.svg\";\nimport { RefineText, TextToArray } from \"../utils/editText\";\n\nconst returnImage = (event) => {\n    return URL.createObjectURL(event.target.files[0]);\n}\n\nconst onHandleTextInput = (event) => {\n    return event.target.value;\n}\n\nconst returnImageName = (event) => {\n    return event.target.files[0].name;\n}\n\nconst getFileExtension = (fileName) => {\n    const arr_name = fileName.split(\".\");\n    return arr_name[arr_name.length - 1];\n}\nconst handleUrlExport = (event) => {\n    const text = event.target.value;\n    const textArray = TextToArray(text);\n    let textOutput = [];\n    for (let i = 0; i < textArray.length; i++) {\n        textOutput.push(RefineText(textArray[i], \"none\", \"origin\"));\n    }\n    return textOutput;\n}\nconst downloadAllImage = (link, fileName, keywordList) => {\n    const fileExtension = getFileExtension(fileName);\n    const keywordArray = TextToArray(keywordList);\n    console.log(RefineText(fileName, \"setminus\", \"origin\"));\n    console.log(keywordArray);\n    fetch(link)\n        .then(response => {\n            response.blob().then(blob => {\n                for (let i = 0; i < keywordArray.length; i++) {\n                    const keyword = keywordArray[i].trim();\n                    if (keyword.length <= 0) {\n                        continue;\n                    }\n                    let url = window.URL.createObjectURL(blob);\n                    let a = document.createElement('a');\n                    const newFileName = RefineText(keywordArray[i], \"setminus\", \"origin\") + \".\" + fileExtension;\n                    console.log(newFileName);\n                    a.href = url;\n                    a.download = newFileName;\n                    a.click();\n                }\n            });\n        });\n}\nconst DownloadMultiFile = () => {\n    const [imgURL, setImage] = useState(logo);\n    const [fileName, getFileName] = useState('default');\n    const [fileExtension, debugFileExtension] = useState('None');\n    const [keywordList, setKeywordList] = useState([]);\n    const [linkKeyword, setLinkKeyword] = useState([0]);\n    return <div className=\"App\" style={{ display: \"flex\" }}>\n        <div>\n            <h3>1 Hinh tra ve nhieu file</h3>\n            <div>\n                <h6>Keyword list</h6>\n                <textarea name=\"keywordList\" style={{ width: \"650px\", height: \"150px\" }}\n                    onChange={(event) => { setKeywordList(onHandleTextInput(event)); setLinkKeyword(handleUrlExport(event)) }} />\n            </div>\n            <div>\n                <input type=\"file\" onChange={(event) => {\n                    setImage(returnImage(event));\n                    getFileName(returnImageName(event));\n                    debugFileExtension(getFileExtension(returnImageName(event)));\n                }} />\n            </div>\n            <div>\n                <button onClick={() => downloadAllImage(imgURL, fileName, keywordList)}>Download All Image</button>\n            </div>\n            <div>\n                <h4>Debug</h4>\n                <img src={imgURL} width={150} />\n                <h6>{imgURL}</h6>\n                <h6>{fileName}</h6>\n                <h6>{fileExtension}</h6>\n\n            </div>\n        </div>\n\n        <div style={{ paddingLeft: \"50px\" }} >\n            {linkKeyword.map(employee => (\n            <p>{employee}</p>\n        ))}\n    </div>\n\n    </div >\n}\n\nexport default DownloadMultiFile;","import React, {useState} from \"react\";\nimport logo from \"../logo.svg\";\nimport {RefineText, TextToArray} from \"../utils/editText\";\n\nconst ChangeMultiFileName = () => {\n    return     <div>\n        Dang Develop\n    </div>\n}\nexport default ChangeMultiFileName;","import './App.css';\nimport React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport DownloadMultiFile from \"./components/DownloadMultiFile\";\nimport ChangeMultiFileName from \"./components/ChangeMultiFileName\";\nfunction App() {\n\n    return (\n        <Router className=\"App\">\n            <div className=\"container\">\n                <nav>\n                    <ul style={{display: \"flex\"}}>\n                        <li>\n                            <Link to=\"/\">Home</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/onefile\">Mot ten nhieu hinh</Link>\n                        </li>\n                        <li>\n                            <Link to=\"/multifile\">Doi ten hang loat hinh thanh 1</Link>\n                        </li>\n                    </ul>\n                </nav>\n\n                {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/onefile\">\n                        <DownloadMultiFile />\n                    </Route>\n                    <Route path=\"/multifile\">\n                        <ChangeMultiFileName />\n                    </Route>\n                    <Route path=\"/\">\n                        <DownloadMultiFile />\n                    </Route>/\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nclass DownloadFile extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    downloadEmployeeData = () => {\n        fetch(\"https://scontent.fsgn5-4.fna.fbcdn.net/v/t1.0-9/153531338_4129721350373278_1704693346196518273_o.jpg?_nc_cat=104&ccb=3&_nc_sid=730e14&_nc_ohc=G5xqKYX_ZSUAX-QxWQg&_nc_oc=AQnWL8JLvHpovZRWoAsE9B33Shhy8udRqsGu9a5OB09jSfXYxXhsX4DnYaMqHv67QeA&_nc_ht=scontent.fsgn5-4.fna&oh=e2a439d75baf4ddb9a4c05440ab2bbc8&oe=605CBCAF\")\n            .then(response => {\n                response.blob().then(blob => {\n                    let url = window.URL.createObjectURL(blob);\n                    let a = document.createElement('a');\n                    a.href = url;\n                    a.download = 'aaaa.jpg';\n                    a.click();\n                });\n                //window.location.href = response.url;\n            });\n    }\n\n    render() {\n        return (\n            <div id=\"container\">\n                <h1>Download File using React App</h1>\n                <h3>Download Employee Data using Button</h3>\n                <button onClick={this.downloadEmployeeData}>Download</button>\n                <p/>\n                <h3>Download Employee Data using Link</h3>\n                <a href=\"#\" onClick={this.downloadEmployeeData}>Download</a>\n            </div>\n        )\n    }\n\n}\n\nexport default DownloadFile;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DownloadFile from \"./components/DownloadFile\";\nimport DownloadMultiFile from \"./components/DownloadMultiFile\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}